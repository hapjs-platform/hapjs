name: quickApp CI

# 触发器
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      versionTag:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    container: gengjiawen/android-ndk:qa-2020-07-31
    steps:
      - uses: actions/checkout@v2
      # build quickapp mockup application
      # - run: |
      #     cd ./mockup/platform/android
      #     ./gradlew assembleRelease -DappVersionTag=${{ inputs.versionTag }}
      #     mv app/build/outputs/apk/phone/release/app-phone-release.apk app/build/outputs/apk/phone/release/quickapp_platform_preview_release_${GITHUB_REF#refs/*/}.apk
      # 打包调试器
      - name: Build debugger
        id: build_debugger
        run: |
          cd $GITHUB_WORKSPACE
          cd ./debug/shell/android
          ./gradlew assembleRelease -PdebugMode=false -DappVersionTag=${{ inputs.versionTag }}
          echo `pwd`
          echo "rename apk"
          echo `ls $GITHUB_WORKSPACE/debug/shell/android/app/build/outputs/apk/release`
        # mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/quickapp_debugger_${GITHUB_REF#refs/*/}.apk
          echo `ls $GITHUB_WORKSPACE/debug/shell/android/app/build/outputs/apk/release`
      # 创建release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.versionTag }}
          release_name: Release ${{ inputs.versionTag }}
          draft: false
          prerelease: false

        # 获取apk版本号
      - name: Get Version Name
        uses: actions/github-script@v3
        id: get-version
        with:
          script: |
            const str=process.env.GITHUB_REF;
            return str.substring(str.indexOf("v"));
          result-encoding: string
      # 上传至release的资源
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传网址，无需改动
          asset_path: ${{ github.workspace }}/debug/shell/android/app/build/outputs/apk/release
          asset_path: ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk # 上传路径
          asset_name: quickapp_debugger_${{steps.get-version.outputs.result}}.apk # 资源名
          asset_content_type: application/vnd.android.package-archiv #资源类型
     # 存档打包的文件
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: app/build/outputs #将打包之后的文件全部上传（里面会有混淆的map文件）
